{"version":3,"sources":["utils/searchHelper.ts","components/SearchLink.tsx","components/PeopleFilters.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","components/Loader/Loader.tsx","api.ts","pages/PeoplePage.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","to","search","allCenturies","SexFilter","currentSex","labels","className","map","sex","index","CenturyFilter","currentCenturies","century","classNames","includes","centuries","filter","PeopleFilters","setSearchParams","sexFilter","get","centuriesFilter","getAll","query","type","placeholder","onChange","event","target","href","PersonLink","person","slug","state","personSlug","name","PeopleTable","people","useParams","sortFilter","orderFilter","handleSortFilter","param","handleOrderFilter","sort","order","undefined","born","died","mother","motherName","father","fatherName","Loader","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","useEffect","getPeople","catch","finally","peopleWithParents","find","element","isMale","isFemale","isInCentury","Math","ceil","matchesQuery","toLowerCase","length","a","b","aValue","bValue","orderOfSort","localeCompare","sortPeople","Navbar","role","isActive","App","path","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.23149ad7.chunk.js","sourcesContent":["export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams,\n): string {\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\nexport const SearchLink: React.FC<Props> = ({\n  children,\n  params,\n  ...props\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props}\n    >\n      {children}\n    </Link>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { SearchLink } from './SearchLink';\nimport { getSearchWith } from '../utils/searchHelper';\n\nexport const allCenturies = ['16', '17', '18', '19', '20'];\n\nconst SexFilter = ({ currentSex }: { currentSex: string | null }) => {\n  const sexes = [null, 'm', 'f'];\n  const labels = ['All', 'Male', 'Female'];\n\n  return (\n    <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n      {sexes.map((sex, index) => (\n        <SearchLink\n          key={sex}\n          className={currentSex === sex ? 'is-active' : ''}\n          params={{ sex }}\n        >\n          {labels[index]}\n        </SearchLink>\n      ))}\n    </p>\n  );\n};\n\n// eslint-disable-next-line\nconst CenturyFilter = ({ currentCenturies }: { currentCenturies: string[] }) => (\n  <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n    <div className=\"level-left\">\n      {allCenturies.map(century => (\n        <SearchLink\n          key={century}\n          data-cy=\"century\"\n          className={classNames('button mr-1', {\n            'is-info': currentCenturies.includes(century),\n          })}\n          params={{\n            centuries: currentCenturies.includes(century)\n              ? currentCenturies.filter(value => value !== century)\n              : [...currentCenturies, century],\n          }}\n        >\n          {century}\n        </SearchLink>\n      ))}\n    </div>\n\n    <div className=\"level-right ml-4\">\n      <SearchLink\n        data-cy=\"centuryALL\"\n        className=\"button is-success is-outlined\"\n        params={{ centuries: null }}\n      >\n        All\n      </SearchLink>\n    </div>\n  </div>\n);\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const sexFilter = searchParams.get('sex');\n  const centuriesFilter = searchParams.getAll('centuries');\n  const query = searchParams.get('query') as string;\n\n  const handleChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n    setSearchParams(getSearchWith(searchParams, {\n      query: event.target.value || null,\n    }));\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <SexFilter currentSex={sexFilter} />\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            value={query}\n            placeholder=\"Search\"\n            onChange={handleChange}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <CenturyFilter currentCenturies={centuriesFilter} />\n      </div>\n\n      <div className=\"panel-block\">\n        <a\n          className=\"button is-link is-outlined is-fullwidth\"\n          href=\"#/people\"\n        >\n          Reset all filters\n        </a>\n      </div>\n    </nav>\n  );\n};\n","import { Link, useSearchParams } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype PersonLinkProps = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<PersonLinkProps> = (\n  { person },\n) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <td>\n      <Link\n        to={`/people/${person.slug}?${searchParams.toString()}`}\n        state={{ personSlug: person.slug }}\n        className={person.sex === 'f' ? 'has-text-danger' : ''}\n      >\n        {person.name}\n      </Link>\n    </td>\n  );\n};\n","import { useParams, useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types/Person';\nimport { PersonLink } from './PersonLink';\nimport { SearchLink } from './SearchLink';\n\ntype PeopleTableProps = {\n  people: Person[],\n};\n\nexport const PeopleTable = (\n  {\n    people,\n  }: PeopleTableProps,\n) => {\n  const { personSlug } = useParams();\n  const [searchParams] = useSearchParams();\n  const sortFilter = searchParams.get('sort');\n  const orderFilter = searchParams.get('order');\n\n  const handleSortFilter = (param: string) => {\n    if (sortFilter === null && orderFilter === null) {\n      return param;\n    }\n\n    if (sortFilter === param && orderFilter === null) {\n      return param;\n    }\n\n    return null;\n  };\n\n  const handleOrderFilter = (param: string) => {\n    if (sortFilter === null && orderFilter === null) {\n      return null;\n    }\n\n    if (sortFilter === param && orderFilter === null) {\n      return 'desc';\n    }\n\n    return null;\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Name\n              <SearchLink\n                params={{\n                  sort: handleSortFilter('name'),\n                  order: handleOrderFilter('name'),\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('fas fa-sort', {\n                    'fa-sort-up': orderFilter === 'desc'\n                      && sortFilter === 'name',\n                  })}\n                  />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Sex\n              <SearchLink\n                params={{\n                  sort: handleSortFilter('sex'),\n                  order: handleOrderFilter('sex'),\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('fas fa-sort', {\n                    'fa-sort-up': orderFilter === 'desc'\n                      && sortFilter === 'sex',\n                  })}\n                  />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Born\n              <SearchLink\n                params={{\n                  sort: handleSortFilter('born'),\n                  order: handleOrderFilter('born'),\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('fas fa-sort', {\n                    'fa-sort-up': orderFilter === 'desc'\n                      && sortFilter === 'born',\n                  })}\n                  />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Died\n              <SearchLink\n                params={{\n                  sort: handleSortFilter('died'),\n                  order: handleOrderFilter('died'),\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('fas fa-sort', {\n                    'fa-sort-up': orderFilter === 'desc'\n                      && sortFilter === 'died',\n                  })}\n                  />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={person.slug === personSlug\n              ? 'has-background-warning' : undefined}\n          >\n            <PersonLink\n              person={person}\n            />\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            {person.mother\n              ? (\n                <PersonLink\n                  person={person.mother}\n                />\n              )\n              : (\n                <td>\n                  {person.motherName !== null\n                    ? person.motherName : '-'}\n                </td>\n              )}\n            {person.father\n              ? (\n                <PersonLink\n                  person={person.father}\n                />\n              )\n              : (\n                <td>\n                  {person.fatherName !== null\n                    ? person.fatherName : '-'}\n                </td>\n              )}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { PeopleFilters, allCenturies } from '../components/PeopleFilters';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Loader } from '../components/Loader/Loader';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [isError, setIsError] = useState<boolean>(false);\n  const [searchParams] = useSearchParams();\n  const centuries = searchParams.getAll('centuries') || allCenturies;\n  const query = searchParams.get('query') as string;\n  const order = searchParams.get('order');\n  const sort = searchParams.get('sort') as string;\n\n  // eslint-disable-next-line\n  const sortPeople = (a: string | number, b: string | number, orderOfSort: string | null) => {\n    if (typeof a === 'string' && typeof b === 'string') {\n      return orderOfSort === 'desc' ? b.localeCompare(a) : a.localeCompare(b);\n    }\n\n    if (typeof a === 'number' && typeof b === 'number') {\n      return orderOfSort === 'desc' ? (b as number) - (a as number) : a - b;\n    }\n\n    return 0;\n  };\n\n  const fetchPeople = () => {\n    setIsLoading(true);\n    getPeople()\n      .then(setPeople)\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  };\n\n  useEffect(fetchPeople, []);\n\n  const filterPeople = (person: Person) => {\n    const isMale = searchParams.toString().includes('m');\n    const isFemale = searchParams.toString().includes('f');\n    // eslint-disable-next-line\n    const isInCentury = centuries.includes(Math.ceil(person.born / 100).toString());\n    const matchesQuery = query !== null && (\n      person.name.toLowerCase().includes(query.toLowerCase())\n      || person.motherName?.toLowerCase().includes(query.toLowerCase())\n      || person.fatherName?.toLowerCase().includes(query.toLowerCase())\n    );\n\n    return (\n      ((!isMale && !isFemale) || (person.sex === (isMale ? 'm' : 'f')))\n      && (centuries.length === 0 || isInCentury)\n      && (query === null || matchesQuery)\n    );\n  };\n\n  const peopleWithParents = people\n    .map(person => ({\n      ...person,\n      mother: people.find(element => element.name === person.motherName),\n      father: people.find(element => element.name === person.fatherName),\n    }))\n    .filter(filterPeople)\n    .sort((a, b) => {\n      const aValue = a[sort as keyof Person];\n      const bValue = b[sort as keyof Person];\n\n      if ((typeof aValue === 'string' || typeof aValue === 'number')\n          && (typeof bValue === 'string' || typeof bValue === 'number')) {\n        // eslint-disable-next-line\n        return sortPeople(aValue as string | number, bValue as string | number, order);\n      }\n\n      return 0;\n    });\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            {!isLoading && <PeopleFilters />}\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading && <Loader />}\n              {/* eslint-disable-next-line */ }\n              {isError && <p data-cy=\"peopleLoadingError\">Something went wrong</p>}\n              {/* eslint-disable-next-line */ }\n              {people.length === 0 && !isLoading && <p data-cy=\"noPeopleMessage\">There are no people on the server</p>}\n              {/* eslint-disable-next-line */ }\n              {!isLoading && peopleWithParents.length === 0 && <p>There are no people matching the current search criteria</p>}\n              {!isLoading && <PeopleTable people={peopleWithParents} />}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={\n              ({ isActive }) => classNames('navbar-item', {\n                'has-background-grey-lighter': isActive,\n              })\n            }\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            aria-current=\"page\"\n            className={\n              ({ isActive }) => classNames('navbar-item', {\n                'has-background-grey-lighter': isActive,\n              })\n            }\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={\n                <h1 className=\"title\">Home Page</h1>\n              }\n            />\n            <Route\n              path=\"/home\"\n              element={\n                <Navigate to=\"/\" replace />\n              }\n            />\n            <Route\n              path=\"/people\"\n              element={\n                <PeoplePage />\n              }\n            />\n            <Route\n              path=\"/people/:personSlug\"\n              element={\n                <PeoplePage />\n              }\n            />\n            <Route\n              path=\"*\"\n              element={\n                <h1 className=\"title\">Page not found</h1>\n              }\n            />\n          </Routes>\n\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}